package com.dianping.pigeon.governor.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OpLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oplog
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oplog
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table oplog
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public OpLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oplog
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andContentIsNull() {
            addCriterion("content is null");
            return (Criteria) this;
        }

        public Criteria andContentIsNotNull() {
            addCriterion("content is not null");
            return (Criteria) this;
        }

        public Criteria andContentEqualTo(String value) {
            addCriterion("content =", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotEqualTo(String value) {
            addCriterion("content <>", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentGreaterThan(String value) {
            addCriterion("content >", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentGreaterThanOrEqualTo(String value) {
            addCriterion("content >=", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentLessThan(String value) {
            addCriterion("content <", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentLessThanOrEqualTo(String value) {
            addCriterion("content <=", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentLike(String value) {
            addCriterion("content like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotLike(String value) {
            addCriterion("content not like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentIn(List<String> values) {
            addCriterion("content in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotIn(List<String> values) {
            addCriterion("content not in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentBetween(String value1, String value2) {
            addCriterion("content between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotBetween(String value1, String value2) {
            addCriterion("content not between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andReqipIsNull() {
            addCriterion("reqIp is null");
            return (Criteria) this;
        }

        public Criteria andReqipIsNotNull() {
            addCriterion("reqIp is not null");
            return (Criteria) this;
        }

        public Criteria andReqipEqualTo(String value) {
            addCriterion("reqIp =", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipNotEqualTo(String value) {
            addCriterion("reqIp <>", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipGreaterThan(String value) {
            addCriterion("reqIp >", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipGreaterThanOrEqualTo(String value) {
            addCriterion("reqIp >=", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipLessThan(String value) {
            addCriterion("reqIp <", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipLessThanOrEqualTo(String value) {
            addCriterion("reqIp <=", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipLike(String value) {
            addCriterion("reqIp like", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipNotLike(String value) {
            addCriterion("reqIp not like", value, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipIn(List<String> values) {
            addCriterion("reqIp in", values, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipNotIn(List<String> values) {
            addCriterion("reqIp not in", values, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipBetween(String value1, String value2) {
            addCriterion("reqIp between", value1, value2, "reqip");
            return (Criteria) this;
        }

        public Criteria andReqipNotBetween(String value1, String value2) {
            addCriterion("reqIp not between", value1, value2, "reqip");
            return (Criteria) this;
        }

        public Criteria andDpaccountIsNull() {
            addCriterion("dpaccount is null");
            return (Criteria) this;
        }

        public Criteria andDpaccountIsNotNull() {
            addCriterion("dpaccount is not null");
            return (Criteria) this;
        }

        public Criteria andDpaccountEqualTo(String value) {
            addCriterion("dpaccount =", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountNotEqualTo(String value) {
            addCriterion("dpaccount <>", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountGreaterThan(String value) {
            addCriterion("dpaccount >", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountGreaterThanOrEqualTo(String value) {
            addCriterion("dpaccount >=", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountLessThan(String value) {
            addCriterion("dpaccount <", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountLessThanOrEqualTo(String value) {
            addCriterion("dpaccount <=", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountLike(String value) {
            addCriterion("dpaccount like", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountNotLike(String value) {
            addCriterion("dpaccount not like", value, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountIn(List<String> values) {
            addCriterion("dpaccount in", values, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountNotIn(List<String> values) {
            addCriterion("dpaccount not in", values, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountBetween(String value1, String value2) {
            addCriterion("dpaccount between", value1, value2, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andDpaccountNotBetween(String value1, String value2) {
            addCriterion("dpaccount not between", value1, value2, "dpaccount");
            return (Criteria) this;
        }

        public Criteria andOptimeIsNull() {
            addCriterion("opTime is null");
            return (Criteria) this;
        }

        public Criteria andOptimeIsNotNull() {
            addCriterion("opTime is not null");
            return (Criteria) this;
        }

        public Criteria andOptimeEqualTo(Date value) {
            addCriterion("opTime =", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeNotEqualTo(Date value) {
            addCriterion("opTime <>", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeGreaterThan(Date value) {
            addCriterion("opTime >", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeGreaterThanOrEqualTo(Date value) {
            addCriterion("opTime >=", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeLessThan(Date value) {
            addCriterion("opTime <", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeLessThanOrEqualTo(Date value) {
            addCriterion("opTime <=", value, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeIn(List<Date> values) {
            addCriterion("opTime in", values, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeNotIn(List<Date> values) {
            addCriterion("opTime not in", values, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeBetween(Date value1, Date value2) {
            addCriterion("opTime between", value1, value2, "optime");
            return (Criteria) this;
        }

        public Criteria andOptimeNotBetween(Date value1, Date value2) {
            addCriterion("opTime not between", value1, value2, "optime");
            return (Criteria) this;
        }

        public Criteria andOptypeIsNull() {
            addCriterion("opType is null");
            return (Criteria) this;
        }

        public Criteria andOptypeIsNotNull() {
            addCriterion("opType is not null");
            return (Criteria) this;
        }

        public Criteria andOptypeEqualTo(Short value) {
            addCriterion("opType =", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeNotEqualTo(Short value) {
            addCriterion("opType <>", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeGreaterThan(Short value) {
            addCriterion("opType >", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeGreaterThanOrEqualTo(Short value) {
            addCriterion("opType >=", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeLessThan(Short value) {
            addCriterion("opType <", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeLessThanOrEqualTo(Short value) {
            addCriterion("opType <=", value, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeIn(List<Short> values) {
            addCriterion("opType in", values, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeNotIn(List<Short> values) {
            addCriterion("opType not in", values, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeBetween(Short value1, Short value2) {
            addCriterion("opType between", value1, value2, "optype");
            return (Criteria) this;
        }

        public Criteria andOptypeNotBetween(Short value1, Short value2) {
            addCriterion("opType not between", value1, value2, "optype");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNull() {
            addCriterion("projectId is null");
            return (Criteria) this;
        }

        public Criteria andProjectidIsNotNull() {
            addCriterion("projectId is not null");
            return (Criteria) this;
        }

        public Criteria andProjectidEqualTo(Integer value) {
            addCriterion("projectId =", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotEqualTo(Integer value) {
            addCriterion("projectId <>", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThan(Integer value) {
            addCriterion("projectId >", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidGreaterThanOrEqualTo(Integer value) {
            addCriterion("projectId >=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThan(Integer value) {
            addCriterion("projectId <", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidLessThanOrEqualTo(Integer value) {
            addCriterion("projectId <=", value, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidIn(List<Integer> values) {
            addCriterion("projectId in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotIn(List<Integer> values) {
            addCriterion("projectId not in", values, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidBetween(Integer value1, Integer value2) {
            addCriterion("projectId between", value1, value2, "projectid");
            return (Criteria) this;
        }

        public Criteria andProjectidNotBetween(Integer value1, Integer value2) {
            addCriterion("projectId not between", value1, value2, "projectid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oplog
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table oplog
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}