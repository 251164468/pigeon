<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:avatar="http://www.dianping.com/schema/avatar" xmlns:pigeon="http://code.dianping.com/schema/pigeon"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.dianping.com/schema/avatar http://www.dianping.com/schema/avatar/avatar-1.0.xsd
     http://code.dianping.com/schema/pigeon http://code.dianping.com/schema/pigeon/pigeon-service-2.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <bean name="placeholder" lazy-init="false"
          class="com.dianping.lion.client.InitializeConfig">
        <property name="propertiesPath" value="config/applicationContext.properties" />
    </bean>

    <!-- enable autowire -->
    <context:annotation-config />
    <pigeon:reference id="masterDataEmployeeService"  timeout="5000"
                      url="http://service.dianping.com/ba/hris/masterdata/EmployeeService_1.0.0"
                      interface="com.dianping.ba.hris.md.api.service.EmployeeService" />


    <!-- core bean -->
    <bean id="taskExecutor"  class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name ="corePoolSize" value ="800" />
        <property name ="maxPoolSize" value ="1200" />
        <property name ="keepAliveSeconds" value ="300" />
        <!--<property name ="queueCapacity" value ="10000" />-->
        <property name= "rejectedExecutionHandler" >
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class = "java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
        <property name="WaitForTasksToCompleteOnShutdown" value="true" />
        <property name="awaitTerminationSeconds" value="0x7fffffff" />
    </bean>

</beans>
